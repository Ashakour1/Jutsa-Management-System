// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String
  isAdmin Boolean @default(false)
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  finance   Finance[]
}

model Finance {
    id       String  @id @map("_id")
  userId     String @db.ObjectId
  user       User @relation(fields: [userId], references: [id])
  title      String
  amount     Float
  type       String
  category   String  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Position {
    id       String  @id @map("_id")  // Ensure id is defined as a String
  title       String @unique
  description String
  members     Member[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Member {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  address       String
  email         String    @unique
  semester      String
  studentId     String    @unique
  year          String
  position_Id   String    @db.ObjectId
  position      Position  @relation(fields: [position_Id] ,references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Competitor {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  number        Int
  email         String
  semester      String
  className     String
  idNumber      String   
  type          String
  skill         String
  projectName   String
  technologies  String
  status        String   @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Sport{
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  monitorName     String
  monitorNumber   String
  className       String
  description     String
  amount          Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


enum Role {
  SUPER_ADMIN
  ADMIN
  USER
  
}